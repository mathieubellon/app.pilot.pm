# Generated by Django 2.1.7 on 2019-02-14 09:57

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pilot.desks.models


class Migration(migrations.Migration):

    replaces = [('desks', '0001_initial'), ('desks', '0002_desk_newsroom_default_tab'), ('desks', '0003_auto_20160330_1427'), ('desks', '0004_desk_private_items_enabled'), ('desks', '0005_auto_20170522_1342'), ('desks', '0006_auto_20170623_1517'), ('desks', '0007_auto_20170627_1531'), ('desks', '0008_auto_20171010_1537'), ('desks', '0009_remove_desk_newsroom_default_tab'), ('desks', '0010_remove_desk_slug'), ('desks', '0011_auto_20180518_0933'), ('desks', '0012_auto_20180516_1325'), ('desks', '0013_remove_desk_users'), ('desks', '0014_auto_20180614_1320'), ('desks', '0015_auto_20180927_0958')]

    initial = True

    dependencies = [
        # migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organizations', '0001_rebirth'),
        ('accounts', '0001_rebirth'),
    ]

    operations = [
        migrations.CreateModel(
            name='Desk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_users', models.IntegerField(blank=True, null=True, verbose_name="Nombre maximum d'utilisateurs")),
                ('max_projects', models.IntegerField(blank=True, null=True, verbose_name='Nombre maximum de projets')),
                ('max_items', models.IntegerField(blank=True, null=True, verbose_name='Nombre maximum de contenus')),
                ('max_assets_storage', models.IntegerField(blank=True, null=True, verbose_name='Taille de stockage maximale (en Giga-octets)')),
                ('advanced_features', models.NullBooleanField(verbose_name='Accès aux fonctionnalités avancées ?')),
                ('updated_at', models.DateTimeField(blank=True, verbose_name='Mis à jour à')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Créé le')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('is_active', models.BooleanField(default=True, help_text="Un desk non actif n'est plus utilisable, les utilisateurs ne peuvent plus s'y connecter", verbose_name='Actif')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos', verbose_name='Logo')),
                ('color', models.CharField(blank=True, max_length=7, verbose_name='Couleur')),
                ('item_languages_enabled', models.BooleanField(default=False, help_text='Indique si les utilisateurs du desk peuvent flagguer les contenus avec une langue', verbose_name='Langues de contenus activées')),
                ('allowed_languages', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=pilot.desks.models.default_languages, help_text="Code langue sous la forme 'fr_FR'. Le premier code est la langue par défaut.", null=True, size=None, validators=[pilot.desks.models.language_list_validator], verbose_name='Langues autorisées pour marquer les contenus')),
                ('private_items_enabled', models.BooleanField(default=True, help_text='Indique si les utilisateurs du desk peuvent rendre un item privé', verbose_name='Items privés activés')),
                ('display_price', models.CharField(blank=True, help_text="Pour les orga facturée en manuel, le prix affiché à l'admin du compte.Valeur d'affichage uniquement, aucun impact sur la facturation réelle.", max_length=100, verbose_name='Prix affiché')),
                ('subscription_terminated', models.BooleanField(default=False, help_text="Indique si l'utilisateur a demandé la fin de son abonnement", verbose_name='Abonnement arrêté')),
                # ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desk_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desks', to='organizations.Organization', verbose_name='Organisation')),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='desks', to='accounts.SubscriptionPlan', verbose_name="Type d'abonnement")),
                # ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='desk_updated', to=settings.AUTH_USER_MODEL, verbose_name='Mis à jour par')),
            ],
            options={
                'verbose_name': 'Desk',
                'verbose_name_plural': 'Desks',
                'ordering': ['name'],
            },
        ),
    ]
