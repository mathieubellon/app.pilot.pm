# Generated by Django 2.1.7 on 2019-02-14 10:32

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('notifications', '0001_initial'), ('notifications', '0002_auto_20160331_1307'), ('notifications', '0003_notification_desk'), ('notifications', '0004_init_desk_on_notifications'), ('notifications', '0005_notification_target_url'), ('notifications', '0006_auto_20181012_1137'), ('notifications', '0007_init_notification_feed_instance_ids'), ('notifications', '0008_auto_20181019_1009'), ('notifications', '0009_notification_data'), ('notifications', '0010_migrate_uuid_to_data'), ('notifications', '0011_auto_20181105_1530'), ('notifications', '0012_toggle_app_notification_preference')]

    initial = True

    dependencies = [
        ('desks', '0001_rebirth'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('items', '0001_rebirth'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Contenu de la notification')),
                ('on_object', models.IntegerField(null=True, verbose_name='Object concerné')),
                ('target_url', models.CharField(blank=True, max_length=300, verbose_name='URL cible')),
                ('send_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Notification envoyée à')),
                ('is_read', models.BooleanField(default=False, verbose_name='Notification lue ?')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict, verbose_name='Data')),
                ('desk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='desks.Desk', verbose_name='Desk')),
                ('on_object_contenttype', models.ForeignKey(max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='contenttypes.ContentType', verbose_name="Content type de l'objet concerné")),
                ('send_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_send', to=settings.AUTH_USER_MODEL, verbose_name='Notification envoyée par')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_type', models.CharField(choices=[('activity_stream', 'Activity Stream'), ('item_saved_filter', 'Item Saved Filter')], max_length=50, verbose_name='Type de flux')),
                ('send_email', models.BooleanField(default=True, verbose_name='Envoyer un email ?')),
                ('display_in_app', models.BooleanField(default=True, verbose_name='Afficher la notification in-app ?')),
                ('activity_verbs', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('accepted_idea', 'Proposition acceptée'), ('asset_linked', 'Fichier lié'), ('asset_unlinked', 'Fichier retiré'), ('cancelled_rejection', 'a annulé le refus de la proposition'), ('closed', 'Clôture'), ('commented', 'Commentaire'), ('copied', 'Copie depuis'), ('created', 'Création'), ('deleted', 'Suppression'), ('hidden', 'Suppression'), ('joined_the_team', 'Nouvel utilisateur'), ('merged_review', 'Intégration des modifications de'), ('put_in_trash', 'Mis à la corbeille'), ('rejected_idea', 'Proposition rejetée'), ('reopened', 'Rouvert'), ('restored', 'Restauration'), ('restored_from_trash', 'Restauration de la corbeille'), ('validated', 'Validation du partage'), ('did_not_validated', 'Rejet du partage'), ('review_content_updated', 'Mise à jour du contenu partagé'), ('revoked', 'Révocation'), ('saved_new_version', 'Nouvelle version'), ('shared', 'Partage'), ('task_created', 'Création de tâche'), ('task_deleted', 'Suppression de tâche'), ('task_done', 'Tâche effectuée'), ('task_updated', 'Modification de tâche'), ('updated', 'Modification'), ('updated_workflow', 'Statut de workflow modifié'), ('upgrade_major_version', 'Version majeure créée')], max_length=100), blank=True, default=list, size=None)),
                ('activity_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('activity_actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_feeds_actor', to=settings.AUTH_USER_MODEL)),
                ('activity_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('desk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_feeds', to='desks.Desk', verbose_name='Desk')),
                ('item_saved_filter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_feeds', to='items.ItemSavedFilter', verbose_name='Saved filter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_feeds', to=settings.AUTH_USER_MODEL, verbose_name='Abonné')),
            ],
        ),
        migrations.AddField(
            model_name='notification',
            name='source_feed',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='notifications.NotificationFeed', verbose_name='Notification envoyée par un flux'),
        ),
        migrations.AddField(
            model_name='notification',
            name='to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_received', to=settings.AUTH_USER_MODEL, verbose_name='Notification envoyée à'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationfeed',
            unique_together={('user', 'item_saved_filter')},
        ),
    ]
